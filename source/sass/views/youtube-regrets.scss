/*
* SCSS rules here are specifically for YouTube Regrets Page only
* and should not be re-used elsewhere.
*/

#view-youtube-regrets {
  .wrapper {
    background: linear-gradient(
      $youtube-regrets-light-red 100vh,
      $white 500vh,
      $white
    );
  }

  #nav-newsletter-form-wrapper.faded-in {
    height: 100vh;
  }

  .intro-viewport {
    --scenePerspective: 55;
    --blockZTranslate: 0;
    --baseBlockGap: 0;
    --ringZTranslate: 0;
    --baseRingGap: 0;
    --sceneDepth: 0;

    min-height: 100vh;
    height: calc(var(--sceneDepth) * 1px);

    .scroll-hint {
      position: fixed;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      color: $youtube-regrets-red;
    }

    .scene-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      .scene {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        margin: auto;
        transform-style: preserve-3d;
        transform: translate3D(0, 0, 0);
        will-change: transform;
        perspective-origin: 50% 50%;
        perspective: calc(var(--scenePerspective) * 1px);
        width: 100vw;
        height: 100vw;

        @media (min-width: $bp-sm) {
          width: 60vw;
          height: 60vw;
        }

        .block {
          position: absolute;
          display: block;
          width: 100%;
          opacity: 0;

          @function get-block-z-translate($block-index) {
            @return calc(
              var(--blockZTranslate) * 1px -
                calc(var(--baseBlockGap) * #{$block-index}) * 1px +
                var(--scenePerspective) * 1px
            );
          }

          &:nth-child(1) {
            transform: translate3D(-20%, 250%, get-block-z-translate(1));
          }

          &:nth-child(2) {
            transform: translate3D(110%, 240%, get-block-z-translate(2));
          }

          &:nth-child(3) {
            transform: translate3D(-80%, -50%, get-block-z-translate(3));
          }

          &:nth-child(4) {
            transform: translate3D(130%, -60%, get-block-z-translate(4));
          }

          &:nth-child(5) {
            transform: translate3D(60%, 270%, get-block-z-translate(5));
          }

          &:nth-child(6) {
            transform: translate3D(-20%, -50%, get-block-z-translate(6));
          }

          &:nth-child(7) {
            transform: translate3D(50%, 220%, get-block-z-translate(7));
          }

          &:nth-child(8) {
            transform: translate3D(-30%, 180%, get-block-z-translate(8));
          }

          &:nth-child(9) {
            transform: translate3D(110%, -90%, get-block-z-translate(9));
          }

          &:nth-child(10) {
            transform: translate3D(60%, 210%, get-block-z-translate(10));
          }
        }

        .ring {
          position: absolute;
          border-radius: 50%;
          opacity: 0;
          width: 100%;
          height: 100%;
          box-shadow: inset 0 0 5px 5px $white;

          @media (min-width: $bp-sm) {
            box-shadow: inset 0 0 10px 15px $white;
          }

          @function get-ring-z-translate($ring-index) {
            @return calc(
              1px *
                (
                  var(--ringZTranslate) - (var(--baseRingGap) * #{$ring-index}) +
                    var(--scenePerspective)
                )
            );
          }

          &:nth-child(1) {
            transform: translate3D(0, 0, get-ring-z-translate(1));
          }

          &:nth-child(2) {
            transform: translate3D(0, 0, get-ring-z-translate(2));
          }

          &:nth-child(3) {
            transform: translate3D(0, 0, get-ring-z-translate(3));
          }

          &:nth-child(4) {
            transform: translate3D(0, 0, get-ring-z-translate(4));
          }

          &:nth-child(5) {
            transform: translate3D(0, 0, get-ring-z-translate(5));
          }
        }
      }
    }
  }

  .intro-text-container {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: start;

    .intro-text {
      position: relative;
      width: 100%;
      max-width: 840px;
      height: 60%;
      margin: 0 auto;
      text-align: center;

      @media (min-width: $bp-md) {
        height: 55%;
      }

      p {
        font-family: "Changa", sans-serif;
        font-weight: 500;
        color: $youtube-regrets-red;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 10px;
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0;
        padding: 0 1rem;
        opacity: 0;

        @include scaleText(30px, 38px, 50px, 56px);
      }
    }

    .intro-button-wrapper {
      text-align: center;

      .btn.btn-primary {
        background-color: $youtube-regrets-red;

        @include hover-focus-active {
          background-color: $youtube-regrets-lighter-red;
          color: $white;
        }
      }
    }
  }

  main {
    h2,
    p {
      color: $youtube-regrets-red;
    }

    h2 {
      font-family: "Changa", sans-serif;

      @include scaleText(30px, 36px, 38px, 42px);
    }

    p {
      font-family: "Zilla Slab";
      font-weight: 500;

      @include scaleText(18px, 24px, 22px, 32px);
    }

    .btn.btn-secondary {
      border-color: $youtube-regrets-red;
      color: $youtube-regrets-red;

      @include hover-focus-active {
        background-color: $youtube-regrets-red;
        color: $white;
      }
    }

    .btn.btn-share {
      @include hover-focus-active {
        &::before {
          filter: brightness(0) invert(100%);
        }
      }

      &::before {
        filter: brightness(1);
      }

      &.facebook-share {
        &::before {
          background-image: url(../_images/youtube-regrets/facebook-share.svg);
        }
      }

      &.twitter-share {
        &::before {
          background-image: url(../_images/youtube-regrets/twitter-share.svg);
        }
      }

      &.email-share {
        &::before {
          background-image: url(../_images/youtube-regrets/email-share.svg);
        }
      }

      &.link-share {
        &::before {
          background-image: url(../_images/youtube-regrets/link-share.svg);
        }

        &.copied {
          &::before {
            background-image: url(../_images/youtube-regrets/link-share-copied.svg);
          }
        }
      }
    }
  }

  .faq {
    a {
      color: $youtube-regrets-red;
      text-decoration: underline;

      @include hover-focus-active {
        color: $youtube-regrets-lighter-red;
      }
    }
  }

  .sticky-side {
    position: sticky;
    top: 120px;
  }

  .youtube-regret {
    margin-bottom: 80px;
  }
}
