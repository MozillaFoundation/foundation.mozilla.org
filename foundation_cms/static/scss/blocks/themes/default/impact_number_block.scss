@use "sass:map";

.impact-number-block {
  // ===================================
  // Variables
  // ===================================
  $stat-colors: (
    1: (
      "background-color": color(orange, "400"),
      "shape-color": color(blue, "200"),
    ),
    2: (
      "background-color": color(yellow, "200"),
      "shape-color": color(green, "200"),
    ),
    3: (
      "background-color": color(blue, "600"),
      "shape-color": color(orange, "200"),
    ),
  );
  $digit-height: 0.95em; // line height of .display-text-1 times 1em

  // ===================================
  // Base Styling
  // ===================================

  display: flex;
  flex-direction: column;

  @include breakpoint(large up) {
    flex-direction: row;
  }

  .impact-stat {
    flex: 1;
    display: flex;
    justify-content: center;

    &__content {
      display: flex;
      flex-direction: row;
      width: 100%;

      @include breakpoint(large up) {
        flex-direction: column;
      }
    }

    &__number {
      flex: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      aspect-ratio: 1 / 1;
      background-repeat: no-repeat;
      background-position: center;
      background-size: 85% auto;

      @include breakpoint(large up) {
        flex: unset;
      }
    }

    &__details {
      flex: 1;
      padding: rem-calc(8);
      display: flex;
      flex-direction: column;
      justify-content: center;

      @include breakpoint(large up) {
        flex: unset;
        padding: rem-calc(24);
        justify-content: normal;
      }
    }

    &__heading {
      margin: 0;
    }

    &__description {
      margin-top: rem-calc(4);

      @include breakpoint(large up) {
        margin-top: 1rem;
      }
    }

    &__digit-window {
      // font-size: $digit-height;
      // line-height: $digit-height;
      height: $digit-height;
      display: inline-block;

      &--animated {
        overflow: hidden;
      }
    }

    &__digit {
      word-break: break-all;
      display: block;
      width: min-content;

      &::before {
        content: attr(data-fake);
        @include mofo-text-style(
          $display-text-styles,
          "1",
          $display-text-font-family
        );
      }

      @for $i from 1 through 10 {
        &--#{$i} {
          animation: counting 0.4s steps(10) forwards;
          animation-iteration-count: #{$i * 2};
          animation-play-state: paused;

          &.animate {
            animation-play-state: running;
          }
        }
      }
    }
  }

  .impact-stat:nth-child(3n + 1) {
    .impact-stat__number {
      background-color: map.get(map.get($stat-colors, 1), "background-color");
      background-image: url("../_images/shapes/blue/blue200-1.svg");
    }
  }

  .impact-stat:nth-child(3n + 2) {
    .impact-stat__number {
      background-color: map.get(map.get($stat-colors, 2), "background-color");
      background-image: url("../_images/shapes/green/green200-1.svg");
    }
  }

  .impact-stat:nth-child(3n + 3) {
    .impact-stat__number {
      background-color: map.get(map.get($stat-colors, 3), "background-color");
      background-image: url("../_images/shapes/orange/orange200-1.svg");
    }
  }

  @keyframes counting {
    100% {
      transform: translate3d(0, -#{$digit-height * 10}, 0);
    }
  }
}
