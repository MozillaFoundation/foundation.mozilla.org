@use "sass:map";

.kinetic-type-wordmark {
  $animation-delay: calc(var(--kinetic-animation-delay-ms) * 1ms);

  &__svg {
    $base-animation-duration: 1s;
    $fill-colors: (
      m-left: color(blue, "300"),
      m-middle: color(orange, "300"),
      m-right: #ffff42,
      o-inner: color(green, "200"),
      z-left: #ffff42,
      a-inner: #ffff42,
      f-bottom: color(blue, "300"),
      o2-inner: color(orange, "300"),
      u-inner: color(orange, "300"),
      n-inner: color(blue, "300"),
      d-inner: #ffff42,
      a2-inner: color(green, "200"),
      t-right: color(orange, "300"),
      o3-inner: color(orange, "300"),
      n2-inner: #ffff42,
    );

    display: block;

    &--horizontal {
      display: none;
    }

    @include breakpoint(medium up) {
      &--stacked {
        display: none;
      }

      &--horizontal {
        display: block;
      }
    }

    // Mixin for wipe reveal animations
    @mixin wipe-reveal($direction: "top", $duration: 1s, $easing: ease-out) {
      @if $direction == "top" {
        clip-path: inset(100% 0 0 0);
      } @else if $direction == "bottom" {
        clip-path: inset(0 0 100% 0);
      } @else if $direction == "left" {
        clip-path: inset(0 0 0 100%);
      } @else if $direction == "right" {
        clip-path: inset(0 100% 0 0);
      }

      animation: wipe-reveal-#{$direction} $duration $easing forwards
        $animation-delay;
    }

    @mixin grow-fill($fill-color) {
      fill: $fill-color;
      transform-box: fill-box;
      transform-origin: center;
      transform: scale(0);
      animation: grow-mask $base-animation-duration ease-out forwards
        $animation-delay;
    }

    .fill-z-left {
      fill: transparent;
      animation: fill-z-left $base-animation-duration ease forwards
        $animation-delay;
    }

    .fill-m-left {
      fill: map.get($fill-colors, m-left);
      @include wipe-reveal("bottom");
    }

    .fill-m-middle {
      fill: map.get($fill-colors, m-middle);
      @include wipe-reveal("top");
    }

    .fill-m-right {
      fill: map.get($fill-colors, m-right);
      @include wipe-reveal("bottom");
    }

    .fill-o-inner {
      @include grow-fill(map.get($fill-colors, o-inner));
    }

    .fill-a-inner {
      @include grow-fill(map.get($fill-colors, a-inner));
    }

    .fill-f-bottom {
      fill: map.get($fill-colors, f-bottom);
      @include wipe-reveal("right");
    }

    .fill-o2-inner {
      @include grow-fill(map.get($fill-colors, o2-inner));
    }

    .fill-u-inner {
      fill: map.get($fill-colors, u-inner);
      @include wipe-reveal("top");
    }

    .fill-n-inner {
      fill: map.get($fill-colors, n-inner);
      @include wipe-reveal("bottom");
    }

    .fill-d-inner {
      @include grow-fill(map.get($fill-colors, d-inner));
    }

    .fill-a2-inner {
      @include grow-fill(map.get($fill-colors, a2-inner));
    }

    .fill-t-right {
      fill: map.get($fill-colors, t-right);
      @include wipe-reveal("right");
    }

    .fill-o3-inner {
      @include grow-fill(map.get($fill-colors, o3-inner));
    }

    .fill-n2-inner {
      fill: map.get($fill-colors, n2-inner);
      @include wipe-reveal("bottom");
    }

    @keyframes fill-z-left {
      to {
        fill: map.get($fill-colors, z-left);
      }
    }

    @each $direction in (top, bottom, left, right) {
      @keyframes wipe-reveal-#{$direction} {
        to {
          clip-path: inset(0 0 0 0);
        }
      }
    }

    @keyframes grow-mask {
      to {
        transform: scale(1);
      }
    }
  }
}
