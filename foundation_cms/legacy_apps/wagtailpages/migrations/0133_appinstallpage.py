# Generated by Django 4.2.11 on 2024-04-03 00:02

import django.db.models.deletion
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models

import foundation_cms.legacy_apps.wagtailpages.validators


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
        ("wagtailpages", "0132_make_link_to_required_in_link_block"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppInstallPage",
            fields=[
                (
                    "campaignpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailpages.campaignpage",
                    ),
                ),
                ("hero_heading", models.CharField(help_text="Hero story headline", max_length=80)),
                ("hero_subheading", models.CharField(blank=True, help_text="Hero story subheadline", max_length=80)),
                (
                    "hero_video",
                    models.URLField(
                        blank=True,
                        help_text="To find embed link: go to your YouTube video and click “Share,” then “Embed,” and then copy and paste the provided URL only. EX: https://www.youtube.com/embed/3FIVXBawyQ",
                        null=True,
                    ),
                ),
                (
                    "download_buttons",
                    wagtail.fields.StreamField(
                        [
                            (
                                "button",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("label", wagtail.blocks.CharBlock()),
                                        (
                                            "link_to",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("page", "Page"),
                                                    ("external_url", "External URL"),
                                                    ("relative_url", "Relative URL"),
                                                    ("email", "Email"),
                                                    ("anchor", "Anchor"),
                                                    ("file", "File"),
                                                    ("phone", "Phone"),
                                                ],
                                                label="Link to",
                                            ),
                                        ),
                                        ("page", wagtail.blocks.PageChooserBlock(label="Page", required=False)),
                                        (
                                            "external_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Enter a full URL including http:// or https://",
                                                label="External URL",
                                                max_length=300,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "relative_url",
                                            wagtail.blocks.CharBlock(
                                                help_text='A path relative to this domain. For example, "/foo/bar"',
                                                label="Relative URL",
                                                max_length=300,
                                                required=False,
                                                validators=[
                                                    foundation_cms.legacy_apps.wagtailpages.validators.RelativeURLValidator()
                                                ],
                                            ),
                                        ),
                                        (
                                            "anchor",
                                            wagtail.blocks.CharBlock(
                                                help_text='An id attribute of an element on the current page. For example, "#section-1"',
                                                label="#",
                                                max_length=300,
                                                required=False,
                                                validators=[
                                                    foundation_cms.legacy_apps.wagtailpages.validators.AnchorLinkValidator()
                                                ],
                                            ),
                                        ),
                                        ("email", wagtail.blocks.EmailBlock(required=False)),
                                        (
                                            "file",
                                            wagtail.documents.blocks.DocumentChooserBlock(
                                                label="File", required=False
                                            ),
                                        ),
                                        (
                                            "phone",
                                            wagtail.blocks.CharBlock(label="Phone", max_length=30, required=False),
                                        ),
                                        (
                                            "new_window",
                                            wagtail.blocks.BooleanBlock(label="Open in new window", required=False),
                                        ),
                                        (
                                            "icon",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                help_text="For best results, please use black or white icons.",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "icon_alt_text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Image description (for screen readers).", required=False
                                            ),
                                        ),
                                    ]
                                ),
                            )
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "hero_background",
                    models.ForeignKey(
                        help_text="Background image for the hero section",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailpages.campaignpage",),
        ),
    ]
