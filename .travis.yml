language: python
services: docker
dist: xenial
env:
  global:
  - DOCKER_USERNAME=mofodevops
  - DOCKER_REPO=mozillafoundation/foundation.mozilla.org
  - secure: CC2kHEdce6rvmeLUebgzRVdztB6FYrLuvz0cxSs620gExDIxcA/+tuGbVXX62KXLSTVxcqIdUxwwkKjZFrhXkyiI0mMoBKK2XiCRO/1SmFzdm94sjnrP3V4XNfIs42/l9v9PwHu11Rvy/sTiSOeifl92ZXnqJfBGo0Wnww+3pVbF+PegFlcLidvLAed58Qs1UYLZmUNLZPtVNJn69yejFC1klj7AS/ySu1/ESHpzv7Su7HKAu6TQle/xbmBf01D7HII1sAYRUJqNoJc/wIB/Y4EwGuI5TvtdFLp5KUjbd4ULcrVBU87SeWixSHuTdxPVnmbmkHCCrh0gN/3+KujlsnWkyxUZ6dvDZxrTESYbi1HBbquV2VdFuOac3rw5+QTsXAL1/iFUPRoZRfo9jsRQJ2C+Q+pYX+3M4WTjSInrzAPuh3uMgdMpvqrHbl/TSxDA/o2LwGNtOzuMO04YUHBKwRVusf8/2dRg0PZ+z0Ar30CvKAqIEYvx6vkNlL/Xct/pQz7tc3YyUTFrVI3IH0x7MCUtegae15iOEcPpNrn38+Mh5Zb1Qfxc2fN/3ZaodpQr5LlMM8ytY0gZtkB5jTzY+QP8NsU0Bf9i2cFzWGu7T1XM7pZi2LyldKkx6L+pP6fcVvAg+NIEtkB4+2L43BvVFXuBEL9UI6FmHEqwQWW7cuU=
  - secure: PDWkB2X3iV57IfMc99BsZaWyHPlh+veC2mUr6t7LsDItJ5p9pg0IKZikSnunts4V0YToc+Wt02EFBUaKkcLkTC2orGgSxqQ0Uuc0WNTPQcYGOw7x9bDQfQZtSONj3ZkEJ7CuRz6KNFnedKwikT3GgT4N/2zxHLCTPVcHVlsaKZvU78v4GFLlRXwFMGCK3+CrODoGpFb8SqLfe9U0NJbOgDKH9vyIumApvQ2zRX9hS/GKXp4ZoGeMFE6t1wprs8lh5VennTeRA1WYer6nmJgLIPLB9lzGAZip13815/t/LUeN62shS+uQBqiVA8sQg9cW68nz9v57COQwGGiua7evimu0DKNSQm/ImveZLIJscxpQSc7Ok7q7/oaNI3xvckEZWCkEJd4fGfY8tgPS2GyMOdNG1Js++mTTbXD5CLMZ1eCoWfe0/H0XjAvT83uSjfw2jU8e3umqvfmPPn+lVLXHvidZgCWduSYBQ45QpHIWqd7CxCPGZoUvc7WZvRVKIg3x6ilgA3htG9inHNMDHkQb/M90SBh65KJg4FLHdxW+QWmhN2k8gz9ML/qR0svpQXOVTQriVolsurs8x2FibsOj2QPU0L3dlowHpSnF8z/tpkOUlENe2+EzEWUfxrzlGgSF8aguByPx3uuatTrNBqjGbIzV35/yZKKVrvO3dnww1/U=

before_script:
  - if [ $TRAVIS_EVENT_TYPE == "pull_request" ]; then eval NODE_TAG=$TRAVIS_PULL_REQUEST_BRANCH-node;
    eval PYTHON_TAG=$TRAVIS_PULL_REQUEST_BRANCH-python; eval APP_BUILD_TAG=$TRAVIS_PULL_REQUEST_BRANCH-app-build;
    eval CYPRESS_TAG=$TRAVIS_PULL_REQUEST_BRANCH-cypress; else eval NODE_TAG=$TRAVIS_BRANCH-node;
    eval PYTHON_TAG=$TRAVIS_BRANCH-python; eval APP_BUILD_TAG=$TRAVIS_BRANCH-app-build;
    eval CYPRESS_TAG=$TRAVIS_BRANCH-cypress; fi
  - echo $NODE_TAG
  - echo $PYTHON_TAG
  - echo $APP_BUILD_TAG
  - echo $CYPRESS_TAG
  - export PYTHON_TAG=$PYTHON_TAG
  - export APP_BUILD_TAG=$APP_BUILD_TAG
  - export CYPRESS_TAG=$CYPRESS_TAG

jobs:
  include:
  - stage: Docker images
    name: Node image
    install: skip
    script:
      # building the image first
      - docker pull $DOCKER_REPO:$NODE_TAG || true
      - docker build --pull --cache-from $DOCKER_REPO:$NODE_TAG --tag $DOCKER_REPO:$NODE_TAG --file "./travis-scripts/Dockerfile.node" .
      # Push the image to Docker Hub
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $DOCKER_REPO:$NODE_TAG

  - stage: Docker images
    name: Django app image
    install: skip
    script:
      # Building node_build step first
      - docker pull $DOCKER_REPO:$APP_BUILD_TAG || true
      - docker build --pull --cache-from $DOCKER_REPO:$APP_BUILD_TAG --tag $DOCKER_REPO:$APP_BUILD_TAG --target node-build --file "./travis-scripts/Dockerfile.python" .
      # Building the application image
      - docker pull $DOCKER_REPO:$PYTHON_TAG || true
      - docker build --pull --cache-from $DOCKER_REPO:$APP_BUILD_TAG --cache-from $DOCKER_REPO:$PYTHON_TAG --tag $DOCKER_REPO:$PYTHON_TAG --target application --file "./travis-scripts/Dockerfile.python" .
      # Push the image to Docker Hub
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $DOCKER_REPO:$APP_BUILD_TAG
      - docker push $DOCKER_REPO:$PYTHON_TAG

  - stage: Tests
    name: Node tests
    script:
      - docker run -it $DOCKER_REPO:$NODE_TAG npm run test

  - stage: Tests
    name: Python tests
    script:
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend flake8 tasks.py network-api
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend coverage run --source './network-api/networkapi' network-api/manage.py test networkapi
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend coveralls

  - stage: Tests
    name: Visual regression tests
    script:
      # building the image first
      - docker-compose -f travis-scripts/docker-compose.travis.yml pull cypress || true
      - docker-compose -f travis-scripts/docker-compose.travis.yml build cypress
      # let's replace all that by a script when it works
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend_cypress python network-api/manage.py collectstatic --no-input --verbosity 0
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend_cypress python network-api/manage.py migrate --no-input
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend_cypress python network-api/manage.py block_inventory
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend_cypress python network-api/manage.py sync_page_translation_fields
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend_cypress python network-api/manage.py update_translation_fields
      - docker-compose -f travis-scripts/docker-compose.travis.yml run --rm backend_cypress python network-api/manage.py load_fake_data
      - docker-compose -f travis-scripts/docker-compose.travis.yml up cypress
      # Push the image to Docker Hub
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker-compose -f travis-scripts/docker-compose.travis.yml push cypress

  - stage: Deploy
    name: Deploy Maintenance page to S3
    script: skip
    deploy:
      provider: s3
      access_key_id: "AKIAIDLSQZEZHN7MPGKA"
      secret_access_key:
        secure: 41kXOgS58Ew64cXRE8KfDWMIAaSHdab/x2e0Pkv0pzEcEAbZloY2I6qlGs+K1JuK68WCicivU1cgmxgqSlA+Ol9cl3LD+XyeQsZqeIiYw9exZVHy1b49I2GPrW32mooasndJd29GNEqLfC5C1PuiVv4Ixs6USeshDH7+/SUFswO4A08F2S0C9r0bAhc9ff2TpsCSGBMNB9QgXvKnKvWB1S+mGbf9anrfJlPV0G6/PrMhldrVUrIULZidbiJuaW2FoKlt0YkEBYdzM+gdNI88VHRSrBnbbZrMs26sd4XBUtSeZcFA2QWnkfltRWLjpmPQWd6lcA53T7jNRr9z89HjEkxtz9N3Rb7qT1fuDwc6f9+5lj9G+kzxSeOoVBDNRNmhHTlEUIbODP80jcbr2GCCs6NgKq4yKApiA1lHA3REooBbGzkc53WtXfITDfK7h6BDDsJyGxBbU2gS66vvmGkv//wdXMsEwTfnmx0oHeQS1ad5emvOJSLIJXtCAqepStEBIhWRnN0ZCDhNTMoz63qE3Ne0KQhHX9j7UBLw7MRy6qGm2+Kd8ok2akqw8WUpQtUkgoxJzMHdx8BEYrFjfWEXnhqGriwWYRCNVI2MK53sE7ia8lzOil4jDAFURtRq7sJBBbgufc010gSHdBdcqm3haYr0XUgebR7hs2BD45+kVZA=
      bucket: "foundation-mozilla-org-maintenance"
      region: us-east-1
      acl: public_read
      local_dir: maintenance
      on:
        branch: master
        condition: $TRAVIS_EVENT_TYPE != pull_request
