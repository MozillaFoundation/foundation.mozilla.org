name: Wagtail CI

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  wagtail_ci:
    name: Wagtail CI
    runs-on: ubuntu-latest
    container: python3.8-nodejs14
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: network
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      ALLOWED_HOSTS: localhost,mozfest.localhost,default-site.com,secondary-site.com
      CONTENT_TYPE_NO_SNIFF: True
      CORS_ALLOWED_ORIGINS: "*"
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/network
      DEBUG: True
      DJANGO_SECRET_KEY: secret
      NETWORK_SITE_URL: https://foundation.mozilla.org
      PULSE_API_DOMAIN: https://network-pulse-api-production.herokuapp.com
      PULSE_DOMAIN: https://www.mozillapulse.org
      RANDOM_SEED: 530910203
      SET_HSTS: False
      SSL_REDIRECT: False
      DOMAIN_REDIRECT_MIDDLEWARE_ENABLED: False
      TARGET_DOMAINS: foundation.mozilla.org
      USE_CLOUDINARY: false
      USE_S3: False
      X_FRAME_OPTIONS: DENY
      XSS_PROTECTION: True
      PIPENV_VERBOSITY: -1
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install Python Dependencies
      run: pip install -r requirements.txt -r dev-requirements.txt
    - name: Install Node Dependencies
      run: npm ci
    - name: Preroll
      run: |
        npm run build
        python network-api/manage.py collectstatic --no-input --verbosity 0
        python network-api/manage.py migrate --no-input
        python network-api/manage.py block_inventory
        python network-api/manage.py sync_page_translation_fields
        python network-api/manage.py update_translation_fields
        python network-api/manage.py compilemessages
    - name: Run Tests
      run: |
        flake8 tasks.py network-api/
        coverage run --source './network-api/networkapi' network-api/manage.py test networkapi
        coveralls
