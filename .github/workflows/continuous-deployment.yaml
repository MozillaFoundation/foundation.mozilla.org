name: Continuous Deployment
# Based on https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-a-workflow-based-on-the-conclusion-of-another-workflow

on: ["push"]
  # Trigger this workflow (continuous deployment) when the "Continous Integration" workflow
  # had completed on the main branch.
#  workflow_run:
#    workflows: [Continuous Integration]
#    types: [completed]
#    branches: ["main"]

jobs:
  ci-success:
    runs-on: ubuntu-latest
    # Check that the triggering workflow ended successfully.
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      # This workflow uses authentication through an API token according to: https://devcenter.heroku.com/articles/authentication
      # Note: API token are differnt from API keys.
      HEROKU_DEPLOYMENT_USER_LOGIN: ${{ secrets.HEROKU_DEPLOYMENT_USER_LOGIN }}
      HEROKU_DEPLOYMENT_USER_API_TOKEN: ${{ secrets.HEROKU_DEPLOYMENT_USER_API_TOKEN }}
    steps:
      - run: echo 'The continuous integration passed. Deploying to staging...'
      - uses: actions/checkout@v2
      - name: Set up git remote
        run: git remote add heroku https://git.heroku.com/foundation-mofostaging-net.git
      - name: Configure Heroku credentials in .netrc file
        run: |
          echo -e "machine api.heroku.com
            login $HEROKU_DEPLOYMENT_USER_LOGIN
            password $HEROKU_DEPLOYMENT_USER_API_TOKEN
          machine git.heroku.com
            login $HEROKU_DEPLOYMENT_USER_LOGIN
            password $HEROKU_DEPLOYMENT_USER_API_TOKEN
          " > ~/.netrc
      - name: Deploy to staging
        run: |
          git fetch heroku
          git push --dry-run heroku main

#  ci-failure:
#    runs-on: ubuntu-latest
#    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
#    steps:
#      - run: echo 'The continuous inegration failed. Not deploying.'
