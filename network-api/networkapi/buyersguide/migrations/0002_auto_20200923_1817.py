# Generated by Django 2.2.16 on 2020-09-23 18:17

from django.db import migrations, models
import networkapi.buyersguide.fields


def move_signup_requirements(apps, schema_editor):
    """
    Software signup fields need to be migrated after Base is updated,
    but before we remove them from the Software model.

      signup_with_email -> signup_requires_email
      signup_with_phone -> signup_requires_phone
      signup_with_third_party -> signup_requires_third_party_account
      signup_methods_helptext -> signup_requirement_explanation
    """
    SoftwareProduct = apps.get_model("buyersguide", "SoftwareProduct")
    for p in SoftwareProduct.objects.all():
        p.signup_requires_email = 'Yes' if p.signup_with_email else 'No'
        p.signup_requires_phone = 'Yes' if p.signup_with_phone else 'No'
        p.signup_requires_third_party_account = 'Yes' if p.signup_with_third_party else 'No'
        p.signup_requirement_explanation = p.signup_methods_helptext
        p.save()


def restore_signup_requirements(apps, schema_editor):
    SoftwareProduct = apps.get_model("buyersguide", "SoftwareProduct")
    for p in SoftwareProduct.objects.all():
        p.signup_with_email = True if p.signup_requires_email is 'Yes' else False
        p.signup_with_phone = True if p.signup_requires_phone is 'Yes' else False
        p.signup_with_third_party = True if p.signup_requires_third_party_account is 'Yes' else False
        p.signup_methods_helptext = p.signup_requirement_explanation
        p.save()


class Migration(migrations.Migration):

    dependencies = [
        ('buyersguide', '0001_to_0049'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='generalproduct',
            name='collects_biometrics',
        ),
        migrations.RemoveField(
            model_name='generalproduct',
            name='collects_biometrics_helptext',
        ),
        migrations.RemoveField(
            model_name='generalproduct',
            name='delete_data',
        ),
        migrations.RemoveField(
            model_name='generalproduct',
            name='delete_data_helptext',
        ),
        migrations.RemoveField(
            model_name='generalproduct',
            name='parental_controls',
        ),
        migrations.RemoveField(
            model_name='product',
            name='how_does_it_share',
        ),
        migrations.RemoveField(
            model_name='product',
            name='share_data',
        ),
        migrations.RemoveField(
            model_name='product',
            name='share_data_helptext',
        ),
        migrations.RemoveField(
            model_name='product',
            name='user_friendly_privacy_policy_helptext',
        ),
        migrations.AddField(
            model_name='product',
            name='ai_helptext',
            field=models.TextField(blank=True, help_text='Helpful text around AI to show on the product page', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='ai_is_transparent',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the company allow users to see how the AI works?'),
        ),
        migrations.AddField(
            model_name='product',
            name='ai_uses_personal_data',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the AI use your personal data to make decisions about you?'),
        ),
        migrations.AddField(
            model_name='product',
            name='biometric_data_collected',
            field=models.TextField(blank=True, help_text='What kind of biometric data does this product collect?', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='company_track_record',
            field=models.CharField(choices=[('Great', 'Great'), ('Average', 'Average'), ('Needs Improvement', 'Needs Improvement'), ('Bad', 'Bad')], default='Average', help_text='This company has a ... track record', max_length=20),
        ),
        migrations.AddField(
            model_name='product',
            name='data_collection_policy_is_bad',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='data_control_policy_is_bad',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='how_can_you_control_your_data',
            field=models.TextField(blank=True, help_text='How does this product let you control your data?', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='how_does_it_use_data_collected',
            field=models.TextField(blank=True, help_text='How does this product use the data collected?', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='offline_capable',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Can this product be used offline?'),
        ),
        migrations.AddField(
            model_name='product',
            name='offline_use_description',
            field=models.TextField(blank=True, help_text='Describe how this product can be used offline.', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='personal_data_collected',
            field=models.TextField(blank=True, help_text='What kind of personal data does this product collect?', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='privacy_ding',
            field=models.BooleanField(default=False, help_text='Tick this box if privacy is not included for this product'),
        ),
        migrations.AddField(
            model_name='product',
            name='show_ding_for_minimum_security_standards',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='signup_requirement_explanation',
            field=models.TextField(blank=True, help_text='Describe the particulars around sign-up requirements here.', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='signup_requires_email',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this product requires providing an email address in order to sign up?'),
        ),
        migrations.AddField(
            model_name='product',
            name='signup_requires_phone',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this product requires providing a phone number in order to sign up?'),
        ),
        migrations.AddField(
            model_name='product',
            name='signup_requires_third_party_account',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this product require a third party account in order to sign up?'),
        ),
        migrations.AddField(
            model_name='product',
            name='social_data_collected',
            field=models.TextField(blank=True, help_text='What kind of social data does this product collect?', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='track_record_details',
            field=models.TextField(blank=True, help_text='Describe the track record of this company here.', max_length=5000),
        ),
        migrations.AddField(
            model_name='product',
            name='track_record_is_bad',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='product',
            name='uses_ai',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the product use AI?'),
        ),
        migrations.AddField(
            model_name='product',
            name='uses_bluetooth',
            field=models.BooleanField(default=False, help_text='Does this product rely on Bluetooth connectivity?'),
        ),
        migrations.AddField(
            model_name='product',
            name='uses_wifi',
            field=models.BooleanField(default=False, help_text='Does this product rely on WiFi connectivity?'),
        ),
        migrations.AlterField(
            model_name='product',
            name='meets_minimum_security_standards',
            field=models.BooleanField(help_text='Does this product meet our minimum security standards?', null=True),
        ),

        # Copy the Software signup requirements to new, corresponding Product fields
        migrations.RunPython(move_signup_requirements, restore_signup_requirements),

        # Then remove the old software-only fields
        migrations.RemoveField(
            model_name='softwareproduct',
            name='signup_methods_helptext',
        ),
        migrations.RemoveField(
            model_name='softwareproduct',
            name='signup_with_email',
        ),
        migrations.RemoveField(
            model_name='softwareproduct',
            name='signup_with_phone',
        ),
        migrations.RemoveField(
            model_name='softwareproduct',
            name='signup_with_third_party',
        ),
    ]
