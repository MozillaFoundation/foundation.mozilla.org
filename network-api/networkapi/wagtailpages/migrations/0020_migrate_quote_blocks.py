# Generated by Django 3.1.11 on 2021-06-24 16:35
from django.db import migrations

from networkapi.mozfest.models import MozfestPrimaryPage
from networkapi.wagtailpages.pagemodels.modular import ModularPage
from networkapi.wagtailpages.pagemodels.primary import PrimaryPage
from networkapi.wagtailpages.pagemodels.blog.blog import BlogPage


def update_queryset(qs):
    # Loop through all pages
    for page in qs:
        print("\t", page)
        # If this page doesn't have a QuoteBlock, don't save it.
        # This will speed up how fast this task can run
        needs_saving = False
        # Only loop through streamfield data if there's a `body` field on the page
        # Looping through raw_data is a List of blocks.
        for block in page.body.raw_data:
            # If there is a type in the blocks, and the block type is a quote
            # ListBlock Quotes are called "quote". Single quotes are called "callouts".
            # This namespacing is very helpful in this scenario.
            if 'type' in block and block['type'] == "quote" and 'quotes' in block['value']:
                print("\t\t\tFOUND block['type'] quote")
                # Check if there is one StructBlock in the ListBlock (can theoretically be 0)
                if len(block['value']['quotes']):
                    # Update the new block fields with the first quote from the old fields.
                    print("\t\tHas at least one item in the list")
                    block['value']['quote'] = block['value']['quotes'][0]['quote']
                    block['value']['attribution'] = block['value']['quotes'][0]['attribution']
                    needs_saving = True

        if needs_saving:
            # If page is published already, continue to publish it.
            # Otherwise just save a revision for draft history.
            if page.live:
                print("\t\tPage is live. Publish it")
                page.save_revision().publish()
            else:
                print("\t\tPage is draft.")
                page.save_revision()

def migrate_quote_list_block_fields_to_standard_fields(apps, schema):

    # Only look through pages that ACTUALLY USE the QuoteBlock streamfield.
    # This helps filter down 1,000+ pages to a smaller subset.
    # Only get English pages.
    pages_with_quote_blocks = [
        BlogPage.objects.filter(locale_id=1),
        PrimaryPage.objects.filter(locale_id=1),
        ModularPage.objects.filter(locale_id=1),
        MozfestPrimaryPage.objects.filter(locale_id=1)
    ]

    for page_qs in pages_with_quote_blocks:
        print("Pages:", page_qs.count())
        print("Pages:", page_qs.count())
        print("Pages:", page_qs.count())
        print("Pages:", page_qs.count())
        update_queryset(page_qs)


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailpages', '0019_add_standard_quoteblock_fields'),
    ]

    operations = [
        migrations.RunPython(migrate_quote_list_block_fields_to_standard_fields)
    ]
