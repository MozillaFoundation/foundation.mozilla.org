# Generated by Django 2.2.13 on 2020-07-20 19:40

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


def create_authors(apps, schema_editor):
    """
    Convert text-based authors to snippet authors and assigns each author
    to the BlogPage
    """
    BlogPage = apps.get_model('wagtailpages', 'BlogPage')
    BlogAuthor = apps.get_model('wagtailpages', 'BlogAuthor')
    BlogAuthors = apps.get_model('wagtailpages', 'BlogAuthors')

    for post in BlogPage.objects.all():
        author, _ = BlogAuthor.objects.get_or_create(name=post.author)
        BlogAuthors.objects.create(page=post, author=author)


def remove_authors(apps, schema_editor):
    """
    Convert snippets to author text fields.

    Because this is an Oderable, we'll use the first author for the CharField.
    """
    BlogPage = apps.get_model('wagtailpages', 'BlogPage')

    for post in BlogPage.objects.all():
        author = post.authors.first()
        if author.author:
            post.author = author.author.name
            post.save()


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailpages', '0003_delete_homepagefeaturednews'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailimages.Image')),
            ],
        ),
        migrations.CreateModel(
            name='BlogAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wagtailpages.BlogAuthor')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='wagtailpages.BlogPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.RunPython(create_authors, reverse_code=remove_authors),
        migrations.RemoveField(
            model_name='blogpage',
            name='author',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_de',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_en',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_es',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_fr',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_nl',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_pl',
        ),
        migrations.RemoveField(
            model_name='blogpage',
            name='author_pt',
        ),
    ]
