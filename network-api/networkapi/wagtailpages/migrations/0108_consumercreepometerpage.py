# Generated by Django 3.2.21 on 2023-10-06 18:45

import django.db.models.deletion
import wagtailmetadata.models
from django.db import migrations, models

import networkapi.wagtailpages.pagemodels.mixin.foundation_navigation


class Migration(migrations.Migration):
    dependencies = [
        ("wagtailcore", "0078_referenceindex"),
        ("wagtailimages", "0024_index_image_file_hash"),
        ("wagtailpages", "0107_remove_old_vote_model"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConsumerCreepometerPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        choices=[("2023", "2023")],
                        default="2023",
                        help_text="Which year is this page for?",
                        max_length=4,
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image must be high quality, include our logo mark and have the dimensions 1200 x 628 px. For more design guidelines see here: https://foundation.mozilla.org/en/docs/brand/brand-identity/social-media/#og-images",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Search image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                wagtailmetadata.models.WagtailImageMetadataMixin,
                networkapi.wagtailpages.pagemodels.mixin.foundation_navigation.FoundationNavigationPageMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
    ]
