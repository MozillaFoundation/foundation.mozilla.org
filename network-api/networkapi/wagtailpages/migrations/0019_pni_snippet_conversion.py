# Generated by Django 2.2.16 on 2020-11-10 19:57

from django.db import migrations, models
import wagtailmetadata.models
import networkapi.buyersguide.fields
import django.core.validators
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0052_pagelogentry'),
        ('wagtailimages', '0022_uploadedimage'),
        ('wagtailpages', '0018_auto_20201126_2017'),
    ]

    operations = [
        migrations.AlterField(
            model_name='productpageprivacypolicylink',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=models.deletion.CASCADE, related_name='privacy_policy_links', to='wagtailpages.ProductPage'),
        ),
        migrations.AlterField(
            model_name='productupdates',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=models.deletion.CASCADE, related_name='updates', to='wagtailpages.ProductPage'),
        ),
        migrations.CreateModel(
            name='BuyersGuidePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Buyers Guide Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='ai_helptext',
            field=models.TextField(blank=True, help_text='Helpful text around AI to show on the product page', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='ai_is_transparent',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the company allow users to see how the AI works?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='ai_uses_personal_data',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the AI use your personal data to make decisions about you?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='biometric_data_collected',
            field=models.TextField(blank=True, help_text='What kind of biometric data does this product collect?', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='camera_app',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the app have or access a camera?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='camera_device',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this device have or access a camera?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='company_track_record',
            field=models.CharField(choices=[('Great', 'Great'), ('Average', 'Average'), ('Needs Improvement', 'Needs Improvement'), ('Bad', 'Bad')], default='Average', help_text='This company has a ... track record', max_length=20),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='data_control_policy_is_bad',
            field=models.BooleanField(default=False, verbose_name='Privacy ding'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='how_can_you_control_your_data',
            field=models.TextField(blank=True, help_text='How does this product let you control your data?', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='location_app',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this app access your location?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='location_device',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this product access your location?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='microphone_app',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this app have or access a microphone?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='microphone_device',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does this Device have or access a microphone?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='offline_capable',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Can this product be used offline?'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='offline_use_description',
            field=models.TextField(blank=True, help_text='Describe how this product can be used offline.', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='personal_data_collected',
            field=models.TextField(blank=True, help_text='What kind of personal data does this product collect?', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='social_data_collected',
            field=models.TextField(blank=True, help_text='What kind of social data does this product collect?', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='track_record_details',
            field=models.TextField(blank=True, help_text='Describe the track record of this company here.', max_length=5000),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='track_record_is_bad',
            field=models.BooleanField(default=False, verbose_name='Privacy ding'),
        ),
        migrations.AddField(
            model_name='generalproductpage',
            name='uses_ai',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Does the product use AI?'),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='easy_to_learn_and_use',
            field=models.NullBooleanField(help_text='Is it easy to learn & use the features?', null=True),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='easy_to_learn_and_use_helptext',
            field=models.TextField(blank=True, max_length=5000),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='handles_recordings_how',
            field=models.TextField(blank=True, help_text='How does this software handle your recordings', max_length=5000),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='host_controls',
            field=models.TextField(blank=True, max_length=5000),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='medical_privacy_compliant',
            field=models.NullBooleanField(help_text='Compliant with US medical privacy laws?', null=True),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='medical_privacy_compliant_helptext',
            field=models.TextField(blank=True, max_length=5000),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='recording_alert',
            field=networkapi.buyersguide.fields.ExtendedYesNoField(help_text='Alerts when calls are being recorded?', null=True),
        ),
        migrations.AddField(
            model_name='softwareproductpage',
            name='recording_alert_helptext',
            field=models.TextField(blank=True, max_length=5000),
        ),
        migrations.AddField(
            model_name='productpage',
            name='creepiness_value',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='ProductPageVotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='productpagevotes',
            name='vote_bins',
            field=models.CharField(default='0,0,0,0,0', max_length=50, validators=[django.core.validators.int_list_validator]),
        ),
        migrations.AddField(
            model_name='productpage',
            name='votes',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.deletion.SET_NULL, related_name='votes', to='wagtailpages.ProductPageVotes'),
        ),
        migrations.AlterField(
            model_name='productpage',
            name='review_date',
            field=models.DateField(default=django.utils.timezone.now, help_text='Review date of this product'),
        ),
    ]
