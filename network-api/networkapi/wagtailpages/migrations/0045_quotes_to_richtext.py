# Generated by Django 3.1.11 on 2021-06-23 21:40

from django.db import migrations

def update_quotes_to_richtext(qs):
    # Loop through all pages
    for page in qs:

        if hasattr(page, 'alias_of') and page.alias_of != None:
            # This is a page alias, rather than a real page
            continue

        # If this page doesn't have a Quote that needs update, don't save it.
        # This will speed up how fast this task can run
        needs_saving = False

        # Only loop through streamfield data if there's a `body` field on the page
        if page.body:
            # Checking if page.body has raw_data, and looping through it.
            if hasattr(page.body, 'raw_data'):
                for block in page.body.raw_data:
                    # If the block type is an quote,
                    # If the block is a blockquote list, loop through them and update them.
                    # However, since we instructed users to only use one quote, there should not be
                    # many, if any, multiple quote blocks.
                    if 'type' in block and block['type'] == "quote":
                        for quote_block in block['value']['quotes']:
                            quote_block['quote'] = '<p> ' + quote_block['quote'] + ' </p>'
                        needs_saving = True
                    # If the block is a callout box, update the content to be html
                    elif 'type' in block and block['type'] == "callout":
                        block['value'] = '<p> ' + block['value'] + ' </p>'
                        needs_saving = True    
                    # If the block is a single quote block, update the quote content to be html
                    elif 'type' in block and block['type'] == "single_quote":
                        block['value']['quote'] = '<p> ' + block['value']['quote'] + ' </p>'
                        needs_saving = True    

            # Save page so the quotes are updated with rich text.
            if needs_saving:
                page.save()


def loop_through_pages_with_quotes(apps, schema_editor):
    # Grabbing all pages that use either callout quotes, block quotes, or single quotes.
    BlogPage = apps.get_model("wagtailpages", "BlogPage")
    PrimaryPage = apps.get_model("wagtailpages", "PrimaryPage")
    ModularPage = apps.get_model("wagtailpages", "ModularPage")
    MozfestPrimaryPage = apps.get_model("mozfest", "MozfestPrimaryPage")
    ArticlePage = apps.get_model("wagtailpages", "ArticlePage")

    pages_with_image_blocks = [
        BlogPage.objects.all(),
        PrimaryPage.objects.all(),
        ModularPage.objects.all(),
        MozfestPrimaryPage.objects.all(),
        ArticlePage.objects.all()
    ]

    for pages in pages_with_image_blocks:
        update_quotes_to_richtext(pages)


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailpages', '0044_remove_generalproductpage_ai_uses_personal_data'),
    ]

    operations = [
        migrations.RunPython(
            code=loop_through_pages_with_quotes
        ),
    ]
